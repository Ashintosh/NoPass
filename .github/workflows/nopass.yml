name: Test & Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install mold linker (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y mold
          echo "RUSTFLAGS='-C link-arg=-fuse-ld=mold'" >> $GITHUB_ENV

      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build release binary on ${{ matrix.os }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Install mold linker (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y mold
          echo "RUSTFLAGS='-C link-arg=-fuse-ld=mold'" >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --verbose

      - name: Upload binary artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: NoPass-${{ runner.os }}
          path: target/release/NoPass
