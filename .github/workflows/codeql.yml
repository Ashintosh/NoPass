name: "CodeQL Rust"

on:
  push:
    branches: [ "main", "v*.*.*" ]
  pull_request:
    branches: [ "main", "v*.*.*" ]
  release:
    types: [ published ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze Rust for ${{ matrix.os-name }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os-name: Linux
          # - os: windows-latest
          #   os-name: Windows
          # - os: macos-latest
          #   os-name: macOS
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install mold linker (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y mold
          echo RUSTFLAGS=-C link-arg=-fuse-ld=mold >> $GITHUB_ENV

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: rust
          paths: src
          paths-ignore: |
            target
            tests/data
            vendor

      - name: Show Rust version
        run: |
          rustc --version
          cargo --version

      - name: Build preparation (Windows only)
        if: runner.os == 'Windows'
        run: echo RUSTFLAGS=-C link-args=/STACK:8388608 >> $GITHUB_ENV

      - name: Check target
        run: cargo check --release --verbose

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3